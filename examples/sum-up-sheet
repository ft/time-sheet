;; -*- scheme -*-

;; This example takes a number of CSV and JSON exports from Redmine and reads
;; them, sums up all the time data contained in them and writes back the
;; corresponding sum to stdout.

(use-modules (time-sheet utils file)
             ((time-sheet csv-import) #:prefix csv:)
             ((time-sheet json-import) #:prefix json:))

(define (maybe-convert file)
  (cond ((is-json? file) (json:json->scm file #:sort? #f))
        ((is-csv? file) (csv:csv->scm file #:sort? #f))
        ;; Fake zero time for unknown file formats...
        (else (list (list (cons 'time 0))))))

(define (statistics f)
  (apply + (map (lambda (x) (assq-ref x 'time))
                (maybe-convert f))))

(format #t "~a~%" (exact->inexact (apply + (map statistics
                                                (cdr (command-line))))))
